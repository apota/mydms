version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: src/DMS.CRM.API/Dockerfile
    ports:
      - "7001:80"
      - "7002:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ConnectionStrings__CrmDatabase=Host=postgres;Database=dms_crm;Username=postgres;Password=dbpassword
      - AWS__Region=us-east-1
      - AWS__AccessKey=${AWS_ACCESS_KEY:-}
      - AWS__SecretKey=${AWS_SECRET_KEY:-}
    depends_on:
      - postgres
      - dynamodb-local
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  web:
    build:
      context: ./src/DMS.CRM.Web
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=https://api:443/api
    depends_on:
      - api

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=dbpassword
      - POSTGRES_DB=dms_crm
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  dynamodb-local:
    image: amazon/dynamodb-local:latest
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data"
    volumes:
      - dynamodb-data:/home/dynamodblocal/data

volumes:
  postgres-data:
  dynamodb-data:
