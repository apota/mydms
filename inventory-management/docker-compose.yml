version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: dms-inventory-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: dmsuser
      POSTGRES_PASSWORD: dms_password
      POSTGRES_DB: dms_inventory
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dms-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dmsuser -d dms_inventory"]
      interval: 10s
      timeout: 5s
      retries: 5

  dynamodb:
    image: amazon/dynamodb-local:latest
    container_name: dms-inventory-dynamodb
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data"
    volumes:
      - dynamodb-data:/home/dynamodblocal/data
    networks:
      - dms-network
    restart: unless-stopped

  localstack:
    image: localstack/localstack:latest
    container_name: dms-inventory-aws-local
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,sqs
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - localstack-data:/tmp/localstack
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - dms-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: dms-inventory-pgadmin
    depends_on:
      - postgres
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dms.local
      PGADMIN_DEFAULT_PASSWORD: admin_password
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - dms-network
    restart: unless-stopped

networks:
  dms-network:
    driver: bridge

volumes:
  postgres-data:
  dynamodb-data:
  localstack-data:
  pgadmin-data:
